services:

  mpfs:
    image: ghcr.io/cardano-foundation/mpfs/mpfs:v1.1.0

    command:
      - --port
      - "3000"
      - --provider
      - yaci
      - --yaci-store-host
      - http://yaci-store-preprod:8080
      - --ogmios-host
      - "http://ogmios-preprod:1337"
      - --database-path
      - /data/mpfs.db
      - --since-slot
      - "94898393"
      - --since-block-id
      - "ef94934f8eb129ebf07eeaab007b81ecb1bc58b121d19ac0ffe81f928bf56cc1"
    networks:
      - ogmios-preprod # connect to ogmios-preprod
      - yaci-store-preprod # connect to yaci-store-preprod
      - web
    depends_on:
      - ogmios-preprod
      - yaci-store-preprod

    restart: on-failure
    volumes:
      - ${MPFS_DIR}:/data
    labels:
      - traefik.docker.network=web
      - traefik.http.routers.mpfs.rule=(Host(`mpfs.plutimus.com`))
      - traefik.http.routers.mpfs.tls=true
      - traefik.http.services.mpfs.loadbalancer.server.port=3000
      - traefik.http.routers.mpfs.tls.certresolver=le

  ogmios-preprod:
    image: cardanosolutions/ogmios:v6.12.0
    logging:
      driver: "json-file"
      options:
        max-size: "400k"
        max-file: "20"
    restart: always
    volumes:
      - ${NODE_DIR}/node.socket:/node/node.socket
      - ${NODE_DIR}/configs:/node/configs

    command:
      - --node-socket
      - /node/node.socket
      - --node-config
      - /node/configs/config.json
      - --host
      - "0.0.0.0"
    networks:
      - ogmios-preprod # serve on 1337

  yaci-store-preprod:
    image: bloxbean/yaci-store:2.0.0-beta4
    container_name: yaci-store-preprod
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL:-jdbc:postgresql://yaci-store-db-preprod:5432/yaci_store?currentSchema=utxo_indexer}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}

    volumes:
      - ./application.properties:/app/config/application.properties
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "50"
    restart: always

    networks:
       - cardano-node-preprod # N2N connection to cardano-node-preprod
       - yaci-store-preprod # serve on 8080
       - yaci-store-db-preprod # connect to the db

  yaci-store-db-preprod:
    image: postgres:17.4
    container_name: yaci-store-db-preprod
    environment:
      - POSTGRES_DB=yaci_store
      - POSTGRES_USER=${POSTGRES_USER:-yaci_store_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-yaci_store_password}

    volumes:
      - yaci-store-db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U yaci -d yaci_store'" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "100"
    networks:
      - yaci-store-db-preprod # serve on 5432

volumes:
  yaci-store-db:

networks:
    web:
        external: true
    cardano-node-preprod:
        external: true
    ogmios-preprod:
    yaci-store-preprod:
    yaci-store-db-preprod: