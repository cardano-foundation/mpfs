{
    "openapi": "3.0.0",
    "info": {
        "title": "MPFS signing-less API documentation",
        "version": "0.0.1",
        "description": ""
    },
    "servers": [
        {
            "url": "https://mpfs.plutimus.com"
        }
    ],
    "paths": {
        "/tokens": {
            "parameters": [],
            "get": {
                "summary": "get tokens",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response with token data and indexer status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokensResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/token/{tokenId}": {
            "parameters": [
                {
                    "name": "tokenId",
                    "in": "path",
                    "required": true,
                    "description": "The token we want to inspect",
                    "schema": {
                        "$ref": "#/components/schemas/TokenId"
                    }
                }
            ],
            "get": {
                "summary": "get a token",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response with token data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Token not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Token not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/token/{tokenId}/facts": {
            "parameters": [
                {
                    "name": "tokenId",
                    "in": "path",
                    "required": true,
                    "description": "The token we want to inspect for requests",
                    "schema": {
                        "$ref": "#/components/schemas/TokenId"
                    }
                }
            ],
            "get": {
                "summary": "get requests for a token",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response with token facts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FactsResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Token not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Token not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transaction/{address}/boot-token": {
            "parameters": [
                {
                    "name": "address",
                    "in": "path",
                    "required": true,
                    "description": "The address of the owner of the boot token",
                    "schema": {
                        "$ref": "#/components/schemas/Address"
                    }
                }
            ],
            "get": {
                "summary": "Returns an unsigned transaction that will boot a token for the given address, together with the new token identifier",
                "responses": {
                    "200": {
                        "description": "Successful response with boot token data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsignedTransaction"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transaction/{address}/end-token/{tokenId}": {
            "parameters": [
                {
                    "name": "address",
                    "in": "path",
                    "required": true,
                    "description": "The address of the owner of the token to end",
                    "schema": {
                        "$ref": "#/components/schemas/Address"
                    }
                },
                {
                    "name": "tokenId",
                    "in": "path",
                    "required": true,
                    "description": "The token identifier to end",
                    "schema": {
                        "$ref": "#/components/schemas/TokenId"
                    }
                }
            ],
            "get": {
                "summary": "Returns an unsigned transaction that will end a token for the given address",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsignedTransaction"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transaction/{address}/request-change/{tokenId}": {
            "parameters": [
                {
                    "name": "address",
                    "in": "path",
                    "required": true,
                    "description": "The address of the owner of the token to request a change for",
                    "schema": {
                        "$ref": "#/components/schemas/Address"
                    }
                },
                {
                    "name": "tokenId",
                    "in": "path",
                    "required": true,
                    "description": "The token identifier to request a change for",
                    "schema": {
                        "$ref": "#/components/schemas/TokenId"
                    }
                }
            ],
            "get": {
                "summary": "Returns an unsigned transaction that will request a change for the given token",
                "parameters": [
                    {
                        "name": "key",
                        "in": "query",
                        "required": true,
                        "description": "The key of the change to request",
                        "schema": {
                            "type": "string",
                            "example": "newKey"
                        }
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "required": true,
                        "description": "The value of the change to request",
                        "schema": {
                            "type": "string",
                            "example": "newValue"
                        }
                    },
                    {
                        "name": "operation",
                        "in": "query",
                        "required": true,
                        "description": "The operation type for the change (insert, delete)",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "insert",
                                "delete"
                            ],
                            "example": "insert"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with unsigned transaction data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsignedTransaction"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, missing or invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Missing or invalid parameters"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transaction/{address}/update-token/{tokenId}": {
            "parameters": [
                {
                    "name": "address",
                    "in": "path",
                    "required": true,
                    "description": "The address of the owner of the token to update",
                    "schema": {
                        "$ref": "#/components/schemas/Address"
                    }
                },
                {
                    "name": "tokenId",
                    "in": "path",
                    "required": true,
                    "description": "The token identifier to update",
                    "schema": {
                        "$ref": "#/components/schemas/TokenId"
                    }
                }
            ],
            "get": {
                "summary": "Returns an unsigned transaction that will update a token for the given address",
                "parameters": [
                    {
                        "name": "request",
                        "in": "query",
                        "required": true,
                        "description": "An output reference ID of a request to update the token, can be repeated",
                        "example": "de110c0ef7caed6cd6eefea0da5a03c4206ef70a8c9f0b89f6938cb9b45afb34-0",
                        "schema": {
                            "$ref": "#/components/schemas/OutputRefId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with unsigned transaction data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsignedTransaction"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transaction": {
            "post": {
                "summary": "Submit a signed transaction to the Cardano network",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignedTransaction"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful submission of the unsigned transaction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TxHashResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid transaction format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid transaction format"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "TxHashResponse": {
                "type": "object",
                "required": [
                    "txHash"
                ],
                "properties": {
                    "txHash": {
                        "type": "string",
                        "pattern": "^[0-9a-fA-F]{64}$",
                        "example": "8056bb70a889b1e89164cb67a38cd349e1f8486c27ea0f1ab578c3b8ab58bcb6",
                        "description": "Transaction hash of the submitted transaction (64-character hexadecimal string)"
                    }
                }
            },
            "SignedTransaction": {
                "type": "object",
                "required": [
                    "signedTransaction"
                ],
                "properties": {
                    "signedTransaction": {
                        "$ref": "#/components/schemas/Transaction"
                    }
                },
                "description": "Object containing the signed transaction to be submitted"
            },
            "Transaction": {
                "type": "string",
                "description": "Base64 encoded unsigned transaction",
                "example": "84a600d9010281825820de110c0ef7caed6cd6eefea0da5a03c420......",
                "pattern": "^[a-z0-9]+$"
            },
            "Address": {
                "type": "string",
                "example": "addr_test1qppdjefs3dpt9a3fxn8v3ce5tzksc63hx57czl9042clgqezw3mh2t8xqryhplp4pj74xz03m6ydqr6lrsdahc3md92sgap2dm",
                "description": "Address of the owner of the token, in Bech32 format",
                "pattern": "^addr_test1[a-z0-9]+$"
            },
            "UnsignedTransaction": {
                "type": "object",
                "required": [
                    "unsignedTransaction"
                ],
                "properties": {
                    "unsignedTransaction": {
                        "$ref": "#/components/schemas/Transaction"
                    }
                }
            },
            "TokenId": {
                "type": "string",
                "pattern": "^[0-9a-fA-F]{64}$",
                "example": "bac25301f5d8955439d374e6d5b6c7c2dc60e2783fa9fb61be7f128425e4572f",
                "description": "Unique identifier for the token (64-character hexadecimal string)"
            },
            "FactsResponse": {
                "type": "object",
                "example": {
                    "key1": "value1",
                    "key2": "value2"
                }
            },
            "TokenResponse": {
                "type": "object",
                "required": [
                    "outputRefId",
                    "state",
                    "requests"
                ],
                "properties": {
                    "outputRefId": {
                        "$ref": "#/components/schemas/OutputRefId"
                    },
                    "state": {
                        "$ref": "#/components/schemas/State"
                    },
                    "requests": {
                        "type": "array",
                        "description": "List of requests associated with the token",
                        "items": {
                            "$ref": "#/components/schemas/Request"
                        }
                    }
                }
            },
            "Request": {
                "type": "object",
                "required": [
                    "outputRefId",
                    "change",
                    "owner"
                ],
                "properties": {
                    "outputRefId": {
                        "$ref": "#/components/schemas/OutputRefId"
                    },
                    "change": {
                        "type": "object",
                        "required": [
                            "key",
                            "value",
                            "operation"
                        ],
                        "properties": {
                            "key": {
                                "type": "string",
                                "description": "Key of the change"
                            },
                            "value": {
                                "type": "string",
                                "description": "Value of the change"
                            },
                            "operation": {
                                "type": "string",
                                "enum": [
                                    "insert",
                                    "update",
                                    "delete"
                                ],
                                "description": "Operation type for the change"
                            }
                        }
                    },
                    "owner": {
                        "type": "string",
                        "pattern": "^[0-9a-fA-F]{66}$",
                        "example": "42d965308b42b2f62934cec8e33458ad0c6a37353d817cafaab1f403",
                        "description": "Address of the owner of the request (66-character hexadecimal string)"
                    }
                }
            },
            "OutputRefId": {
                "type": "string",
                "description": "Unique identifier for the output reference, composed of the transaction hash and output index",
                "example": "8056bb70a889b1e89164cb67a38cd349e1f8486c27ea0f1ab578c3b8ab58bcb6-0",
                "pattern": "^[0-9a-fA-F]{64}-[0-9]+$"
            },
            "TokensResponse": {
                "type": "object",
                "required": [
                    "tokens",
                    "indexerStatus"
                ],
                "properties": {
                    "tokens": {
                        "type": "array",
                        "description": "List of tokens with their current state and output reference",
                        "items": {
                            "$ref": "#/components/schemas/Token"
                        }
                    },
                    "indexerStatus": {
                        "$ref": "#/components/schemas/IndexerStatus"
                    }
                }
            },
            "Token": {
                "type": "object",
                "required": [
                    "tokenId",
                    "current"
                ],
                "properties": {
                    "tokenId": {
                        "type": "string",
                        "pattern": "^[0-9a-fA-F]{64}$",
                        "example": "8056bb70a889b1e89164cb67a38cd349e1f8486c27ea0f1ab578c3b8ab58bcb6",
                        "description": "Unique identifier for the token (64-character hexadecimal string)"
                    },
                    "current": {
                        "$ref": "#/components/schemas/TokenState"
                    }
                }
            },
            "TokenState": {
                "type": "object",
                "required": [
                    "outputRefId",
                    "state"
                ],
                "properties": {
                    "outputRefId": {
                        "$ref": "#/components/schemas/OutputRefId"
                    },
                    "state": {
                        "$ref": "#/components/schemas/State"
                    }
                }
            },
            "State": {
                "type": "object",
                "required": [
                    "owner",
                    "root"
                ],
                "properties": {
                    "owner": {
                        "type": "string",
                        "pattern": "^[0-9a-fA-F]{66}$",
                        "example": "42d965308b42b2f62934cec8e33458ad0c6a37353d817cafaab1f403",
                        "description": "Address of the token owner (66-character hexadecimal string)"
                    },
                    "root": {
                        "type": "string",
                        "pattern": "^[0-9a-fA-F]{64}$",
                        "example": "51142f22ba3576be090b2dca505687be816e7829352ef97d3671bf974bc43719",
                        "description": "Root hash associated with the token state (64-character hexadecimal string)"
                    }
                }
            },
            "IndexerStatus": {
                "type": "object",
                "required": [
                    "ready",
                    "networkTip",
                    "indexerTip"
                ],
                "properties": {
                    "ready": {
                        "type": "boolean",
                        "example": true,
                        "description": "Indicates if the indexer is ready"
                    },
                    "networkTip": {
                        "type": "integer",
                        "minimum": 0,
                        "example": 94729461,
                        "description": "Latest block height known to the network"
                    },
                    "indexerTip": {
                        "type": "integer",
                        "minimum": 0,
                        "example": 94729461,
                        "description": "Latest block height processed by the indexer"
                    }
                }
            }
        }
    }
}