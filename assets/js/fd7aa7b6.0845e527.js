"use strict";(globalThis.webpackChunkmy_website=globalThis.webpackChunkmy_website||[]).push([[4509],{6794:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>i});const a=JSON.parse('{"id":"manual/signingful","title":"Signingful Merkle Patricia Forestry Service (OUTDATED)","description":"Running the service","source":"@site/docs/manual/signingful.md","sourceDirName":"manual","slug":"/manual/signingful","permalink":"/mpfs/docs/manual/signingful","draft":false,"unlisted":false,"editUrl":"https://github.com/cardano-foundation/mpfs/tree/main/docs/docs/manual/signingful.md","tags":[],"version":"current","frontMatter":{}}');var c=s(4848),t=s(8453);const r={},l="Signingful Merkle Patricia Forestry Service (OUTDATED)",d={},i=[{value:"Running the service",id:"running-the-service",level:2},{value:"Mnemonics",id:"mnemonics",level:3},{value:"Illustrative example",id:"illustrative-example",level:2},{value:"New tokens",id:"new-tokens",level:2},{value:"Requests to update a token",id:"requests-to-update-a-token",level:2},{value:"Deleting facts",id:"deleting-facts",level:2},{value:"Deleting tokens",id:"deleting-tokens",level:2},{value:"Docker",id:"docker",level:2},{value:"Radicle",id:"radicle",level:2}];function o(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsx)(n.h1,{id:"signingful-merkle-patricia-forestry-service-outdated",children:"Signingful Merkle Patricia Forestry Service (OUTDATED)"})}),"\n",(0,c.jsx)(n.h2,{id:"running-the-service",children:"Running the service"}),"\n",(0,c.jsx)(n.h3,{id:"mnemonics",children:"Mnemonics"}),"\n",(0,c.jsx)(n.p,{children:"The service is designed to control a wallet, so you need to expose the\nmnemonics of the wallet in order to make transactions."}),"\n",(0,c.jsxs)(n.p,{children:["The file with the mnemonics is passed as ",(0,c.jsx)(n.code,{children:"--seed"})," argument.\nUsing the ",(0,c.jsx)(n.code,{children:"-g"})," option one can overwrite the mnemonics file with the new mnemonics."]}),"\n",(0,c.jsx)(n.h2,{id:"illustrative-example",children:"Illustrative example"}),"\n",(0,c.jsx)(n.p,{children:"ATM nix is not able to bring the node dependencies in scope, so you need to"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"cd off_chain\n"})}),"\n",(0,c.jsx)(n.p,{children:"and manually install the dependencies:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"npm install\n"})}),"\n",(0,c.jsxs)(n.p,{children:["To illustrate the example usage of the service, we will use a local cluster with ",(0,c.jsx)(n.code,{children:"yaci"}),", so that we can\neasily create wallets and fund them."]}),"\n",(0,c.jsxs)(n.p,{children:["We will create 3 wallets:  ",(0,c.jsx)(n.code,{children:"charlie"}),", ",(0,c.jsx)(n.code,{children:"alice"})," and ",(0,c.jsx)(n.code,{children:"bob"}),".\n",(0,c.jsx)(n.code,{children:"charlie"})," will be the owner of the token, and ",(0,c.jsx)(n.code,{children:"alice"})," and ",(0,c.jsx)(n.code,{children:"bob"})," will\nboth request for the updates to the token."]}),"\n",(0,c.jsxs)(n.p,{children:["First of all, start with ",(0,c.jsx)(n.code,{children:"nix develop"})," in ",(0,c.jsx)(n.strong,{children:"five"})," separate terminals."]}),"\n",(0,c.jsxs)(n.p,{children:["Make sure you have ",(0,c.jsx)(n.strong,{children:"yaci"})," up in one terminal (",(0,c.jsx)(n.code,{children:"just run-yaci"}),"). Then in the other three, representing\n",(0,c.jsx)(n.code,{children:"charlie"}),", ",(0,c.jsx)(n.code,{children:"alice"})," and ",(0,c.jsx)(n.code,{children:"bob"}),", respectively, we type the following:"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"npx tsx src/service/main.ts --seed ./mnemonics.txt --provider yaci --port 3000 --yaci-store-host http://localhost:8080 --yaci-admin-host http://localhost:10000 -g\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"npx tsx src/service/main.ts --seed ./mnemonics2.txt --provider yaci --port 3002 --yaci-store-host http://localhost:8080 --yaci-admin-host http://localhost:10000 -g\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"npx tsx src/service/main.ts --seed ./mnemonics3.txt --provider yaci --port 3004 --yaci-store-host http://localhost:8080 --yaci-admin-host http://localhost:10000 -g\n"})}),"\n",(0,c.jsxs)(n.p,{children:["The ",(0,c.jsx)(n.code,{children:"-g"})," option enforces using the new mnemonics every time."]}),"\n",(0,c.jsx)(n.p,{children:"Now, in the last fifth terminal paste the following:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"export charlie='http://localhost:3000'\nexport alice='http://localhost:3002'\nexport bob='http://localhost:3004'\n"})}),"\n",(0,c.jsxs)(n.p,{children:["Let's fund ",(0,c.jsx)(n.code,{children:"charlie"}),", ",(0,c.jsx)(n.code,{children:"bob"})," and ",(0,c.jsx)(n.code,{children:"alice"})," wallets"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:'curl -s -X PUT $charlie/wallet/topup -H "Content-Type: application/json" -d \'{"amount": 10000}\' | jq\ncurl -s -X PUT $alice/wallet/topup -H "Content-Type: application/json" -d \'{"amount": 10000}\' | jq\ncurl -s -X PUT $bob/wallet/topup -H "Content-Type: application/json" -d \'{"amount": 10000}\' | jq\n'})}),"\n",(0,c.jsx)(n.p,{children:"After each command you should see:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'{\n  "message": "Top up successful"\n}\n'})}),"\n",(0,c.jsxs)(n.p,{children:["Querying ",(0,c.jsx)(n.code,{children:"charlie"})," wallet shows that it has some UTXOs"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"curl -s -X GET $charlie/wallet | jq\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'{\n  "address": "addr_test1qzlxxg4p8gkqdwt0vttvadgx59xqn72uttp89mp2s8kw88fd7vd6n95tsrtlmjcm24n4ke9hha6ukupnvxcf27s72jpsywzxln",\n  "owner": "be6322a13a2c06b96f62d6ceb506a14c09f95c5ac272ec2a81ece39d",\n  "utxos": [\n    {\n      "input": {\n        "outputIndex": 0,\n        "txHash": "ef549632aad2f930709944c3584dac46c772722375b7702f4d7ee1ae2ee2482e"\n      },\n      "output": {\n        "address": "addr_test1qzlxxg4p8gkqdwt0vttvadgx59xqn72uttp89mp2s8kw88fd7vd6n95tsrtlmjcm24n4ke9hha6ukupnvxcf27s72jpsywzxln",\n        "amount": [\n          {\n            "unit": "lovelace",\n            "quantity": "10000000000"\n          }\n        ]\n      }\n    },\n    {\n      "input": {\n        "outputIndex": 0,\n        "txHash": "2371a7ea99c11e9b230592bccdea68abf684ee9b349fa2152fce0f0148dfe68a"\n      },\n      "output": {\n        "address": "addr_test1qzlxxg4p8gkqdwt0vttvadgx59xqn72uttp89mp2s8kw88fd7vd6n95tsrtlmjcm24n4ke9hha6ukupnvxcf27s72jpsywzxln",\n        "amount": [\n          {\n            "unit": "lovelace",\n            "quantity": "10000000000"\n          }\n        ]\n      }\n    }\n  ]\n}\n'})}),"\n",(0,c.jsx)(n.h2,{id:"new-tokens",children:"New tokens"}),"\n",(0,c.jsxs)(n.p,{children:["In order to create a new MPF token that ",(0,c.jsx)(n.code,{children:"charlie"})," controls, he can get his owner id from the retrieved wallet,\nand use it in token minting."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"owner=$(curl -s -X GET $charlie/wallet | jq -r '.owner')\necho $owner\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:"42d965308b42b2f62934cec8e33458ad0c6a37353d817cafaab1f403\n"})}),"\n",(0,c.jsxs)(n.p,{children:["Now ",(0,c.jsx)(n.code,{children:"charlie"})," can create a token under his control via:"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:'tokenId=$(curl -s -X POST $charlie/token \\\n  -H "Content-Type: application/json" \\\n  -d "{\\"owner\\": \\"$owner\\"}" | jq -r \'.tokenId\')\necho $tokenId\n'})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"5d32fe6ee4ec1326bf14ebbc67dd566e03d4bd04881c463107485398d9901196\n"})}),"\n",(0,c.jsx)(n.p,{children:"That token id is unique inside the network and can be used to identify the token later.\nNotice that we do not support ownership transfer at this moment (which is allowed on-chain generally).\nNevertheless, anyone can always query all tokens at caging address with:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"curl -s -X GET $alice/tokens | jq\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'{\n  "tokens": [\n    {\n      "tokenId": "5d32fe6ee4ec1326bf14ebbc67dd566e03d4bd04881c463107485398d9901196",\n      "state": {\n        "owner": "42d965308b42b2f62934cec8e33458ad0c6a37353d817cafaab1f403",\n        "root": "0000000000000000000000000000000000000000000000000000000000000000"\n      }\n    }\n  ],\n  "indexerStatus": {\n    "ready": true,\n    "networkTip": 846,\n    "indexerTip": 846\n  }\n}\n'})}),"\n",(0,c.jsx)(n.p,{children:"Take notice that the root is empty, meaning no facts are inside.\nIn this situation, besides inserting a new value, the only operation we could do with this token is to delete it.\nWhich we will demonstrate, but later."}),"\n",(0,c.jsx)(n.h2,{id:"requests-to-update-a-token",children:"Requests to update a token"}),"\n",(0,c.jsx)(n.p,{children:"The request comprises of 4 fields:"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"operation"}),": The operation to perform on the MPF token. This can be one of the following:","\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"insert"}),": Insert a new value into the MPF."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"delete"}),": Delete a value from the MPF."]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"key"}),": The key of the value to update."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"value"}),": The value to be updated at a specified ",(0,c.jsx)(n.code,{children:"key"}),"."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"owner"}),": The owner of the request. This is implicit in the current API."]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:"The owner of the request is (for now) allowed to retract his request whenever he wants.\nThis will change in the future for the sake of protecting against a form of DDoS attack against the token."}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["ATM requests are completely consumed in terms of value by the token update transaction, this is unacceptable and the update should only cost a fee.\nWe are planning the support for ",(0,c.jsx)(n.code,{children:"update"})," and ",(0,c.jsx)(n.code,{children:"expiration"})," date (against DDoS)"]}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["Anyone can create a request to update a token. For example,\nlet ",(0,c.jsx)(n.code,{children:"bob"})," create a request to update the token we created before."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:'reqBob=$(curl -s -X POST $bob/token/$tokenId/request \\\n  -H "Content-Type: application/json" \\\n  -d \'{"operation": "insert","key": "abc","value": "value1"}\' | jq -r)\necho $reqBob\n'})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"ac8b76b77b7c189213b1fea58b3d365bb5bde0d9987c0be79c52c494b3e79f36-0\n"})}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsx)(n.p,{children:"The current API uses the wallet owner as the owner of the request. This is not validated by the contract, but it could be a requirement for the token owner to accept the request. I.E. the owner could be programmed to accept specific semantics (key modifications) request only by the specified owners and that would require the token owner to sign the request like we do here."}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["The request is now in the caging address, and anyone can see it by inspecting the token field ",(0,c.jsx)(n.code,{children:"requests"}),":"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"curl -s -X GET $alice/token/$tokenId | jq '.requests'\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "outputRef": "ac8b76b77b7c189213b1fea58b3d365bb5bde0d9987c0be79c52c494b3e79f36-0",\n    "change": {\n      "key": "abc",\n      "value": "value1",\n      "operation": "insert"\n    },\n    "owner": "3db404e05ce862b4c8286341f78eae59a1f9f710c5a2d3afe32df7bd"\n  }\n]\n'})}),"\n",(0,c.jsxs)(n.p,{children:["Notice that the owner of the request is ",(0,c.jsx)(n.code,{children:"bob"}),", which is the wallet that created the request."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"curl -s -X GET $bob/wallet | jq -r '.owner'\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"3db404e05ce862b4c8286341f78eae59a1f9f710c5a2d3afe32df7bd\n"})}),"\n",(0,c.jsxs)(n.p,{children:["Let's add a request from ",(0,c.jsx)(n.code,{children:"alice"})," to insert another value:"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:'reqAlice=$(curl -s -X POST $alice/token/$tokenId/request \\\n  -H "Content-Type: application/json" \\\n  -d \'{"operation": "insert","key": "abd","value": "value2"}\' | jq -r)\necho $reqAlice\n'})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"91c86a67b93007231b17789831d39ec0a2b0fd69c9e029fdf8246f1635a86bc4-0\n"})}),"\n",(0,c.jsx)(n.p,{children:"The request is now in the caging address, and anyone can see it with:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"curl -s -X GET $bob/token/$tokenId | jq '.requests'\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "outputRef": "91c86a67b93007231b17789831d39ec0a2b0fd69c9e029fdf8246f1635a86bc4-0",\n    "change": {\n      "key": "abd",\n      "value": "value2",\n      "operation": "insert"\n    },\n    "owner": "97c5d79444e0dca4cfbb561c561630fd1f1cea75e4938e006177a1ed"\n  },\n  {\n    "outputRef": "ac8b76b77b7c189213b1fea58b3d365bb5bde0d9987c0be79c52c494b3e79f36-0",\n    "change": {\n      "key": "abc",\n      "value": "value1",\n      "operation": "insert"\n    },\n    "owner": "3db404e05ce862b4c8286341f78eae59a1f9f710c5a2d3afe32df7bd"\n  }\n]\n'})}),"\n",(0,c.jsx)(n.p,{children:"Note that the request is not applied to the token yet, and it can be retracted by the owner of the request."}),"\n",(0,c.jsxs)(n.p,{children:["Let ",(0,c.jsx)(n.code,{children:"bob"})," retract his request with:"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"curl -s -X DELETE $bob/request/$bobReq | jq\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'{\n  "txHash": "b355ecbb5c07491f45690f8894db8ac4b7931a5fe49ed071acff7953b88d921b"\n}\n'})}),"\n",(0,c.jsx)(n.p,{children:"The request is now retracted and we can see it with:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"curl -s -X GET $charlie/token/$tokenId | jq '.requests'\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "outputRef": "91c86a67b93007231b17789831d39ec0a2b0fd69c9e029fdf8246f1635a86bc4-0",\n    "change": {\n      "key": "abd",\n      "value": "value2",\n      "operation": "insert"\n    },\n    "owner": "97c5d79444e0dca4cfbb561c561630fd1f1cea75e4938e006177a1ed"\n  }\n]\n'})}),"\n",(0,c.jsxs)(n.p,{children:["Note that only ",(0,c.jsx)(n.code,{children:"bob"})," (as request owner) was actually able to retract the request.\nIf ",(0,c.jsx)(n.code,{children:"bob"})," tries to retract the request that was  not created by him, he will fail:"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"curl -s -X DELETE $bob/request/$aliceReq | jq\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Error retracting",\n  "details": "Request owner does not match signer"\n}\n'})}),"\n",(0,c.jsxs)(n.p,{children:["Now ",(0,c.jsx)(n.code,{children:"charlie"})," who is the owner of the token can apply the request(s) to the token."]}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsx)(n.p,{children:"ATM batching is possible but very primitive, do not batch more than 4 requests."}),"\n"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:'curl -s -X PUT $charlie/token/$tokenId  \\\n    -H "Content-Type: application/json" \\\n    -d "{\\"requestIds\\":[\\"$reqAlice\\"]}" | jq\n'})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'{ "txHash": "b82b1109930a9ec710f07e2ac5eca779115d20ec113933a029a3d7ce9be0cc5e"\n}\n'})}),"\n",(0,c.jsx)(n.p,{children:"The request is now applied to the token and anyone can see the root has changed."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"curl -s -X GET $alice/token/$tokenId | jq\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'{\n  "owner": "42d965308b42b2f62934cec8e33458ad0c6a37353d817cafaab1f403",\n  "root": "62e32748610361630d6e3078f741ba931e13b1f2d53e5cde79e543e80a61ce6e",\n  "requests": []\n}\n\n'})}),"\n",(0,c.jsx)(n.p,{children:"Note that the requests are now empty and the root is updated."}),"\n",(0,c.jsx)(n.p,{children:"But anyone can also retrieve the facts."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"curl -s -X GET $bob/token/$tokenId/facts\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'{"abd": "value2"}\n'})}),"\n",(0,c.jsx)(n.h2,{id:"deleting-facts",children:"Deleting facts"}),"\n",(0,c.jsx)(n.p,{children:"When a fact does not hold anymore, it can be deleted from the MPF token. Again it goes through the request process."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:'delReq=$(curl -s -X POST $bob/token/$tokenId/request \\\n  -H "Content-Type: application/json" \\\n  -d \'{"operation": "delete", "key": "abd", "value" : "value2"}\' | jq -r)\n'})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"b2cc05799bf26ae8770ef7ba767819f85c5f383eb66688d34657994438eb291c-0\n"})}),"\n",(0,c.jsxs)(n.p,{children:["Then ",(0,c.jsx)(n.code,{children:"charlie"})," can apply the request to the token. It's always the token  owner responsible for applying the requests."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:'curl -s -X PUT $charlie/token/$tokenId \\\n  -H "Content-Type: application/json" \\\n  -d "{\\"requestIds\\":[\\"$delReq\\"]}" | jq\n'})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'{\n  "txHash": "b8fb8036ee94dd88fbdd90681852a6a6807406e602f6cd990d6ff76c4d84f2f7"\n}\n'})}),"\n",(0,c.jsx)(n.p,{children:"Now the facts are empty and the root is empty as well:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"curl -s -X GET $alice/token/$tokenId | jq\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'{\n  "owner": "42d965308b42b2f62934cec8e33458ad0c6a37353d817cafaab1f403",\n  "root": "0000000000000000000000000000000000000000000000000000000000000000",\n  "requests": []\n}\n'})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"curl -s -X GET $charlie/token/$tokenId/facts | jq\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:"{}\n"})}),"\n",(0,c.jsx)(n.h2,{id:"deleting-tokens",children:"Deleting tokens"}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"charlie"})," can delete the token with:"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"\ncurl -s -X DELETE $charlie/token/$tokenId | jq\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'{\n  "txHash": "c535a3f3c2762677951a80dc25903a74eb9f6ad9933925716321fe91359e612e"\n}\n'})}),"\n",(0,c.jsx)(n.h2,{id:"docker",children:"Docker"}),"\n",(0,c.jsx)(n.p,{children:"Build the docker image with:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"cd off_chain\ndocker build -f docker/Dockerfile -t mpf-service .\n"})}),"\n",(0,c.jsx)(n.p,{children:"There is a docker-compose file that will run the service with yaci"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash"})}),"\n",(0,c.jsx)(n.p,{children:"You will have port 3000 and 3002 and 3004 as users. Be careful to stop yaci before running the docker compose."}),"\n",(0,c.jsx)(n.p,{children:"All of the above applies to the docker compose as well."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"curl -s -X GET $charlie/tokens | jq\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'{\n  "tokens": [],\n  "indexerStatus": {\n    "ready": true,\n    "networkTip": 645,\n    "indexerTip": 645\n  }\n}\n'})}),"\n",(0,c.jsx)(n.p,{children:"Shut down the docker compose with:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"docker compose -f docker/docker-compose.yaml down --volumes\n"})}),"\n",(0,c.jsx)(n.h2,{id:"radicle",children:"Radicle"})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(o,{...e})}):o(e)}}}]);